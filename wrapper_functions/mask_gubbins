__author__ = "Dhatri Badri"
__copyright__ = "Copyright 2024, Dhatri Badri"
__email__ = "dhatrib@umich.edu"
__license__ = "MIT"

import os
from snakemake.shell import shell

outdir = snakemake.params.get("outdir", "") 
#prefix = snakemake.params.get("prefix", "") 
alignment = snakemake.params.get("alignment", "")
#log = snakemake.log_fmt_shell(stdout=False, stderr=True)

# read in alignment and gubbins gff file
gff = pd.read_csv({snakemake.input.recombination_predictions_gff}, sep='\t', skiprows=2, header=None)
aln = AlignIO.read(alignment, 'fasta')

# get indices/positions of recombinant regions identified by gubbins
#print('Getting recombinant positions.')
recomb_regions = defaultdict(list)

for row in gff.iterrows():
    start = row[1][3]
    end = row[1][4]
    region = list(range(start, end))
    taxa = row[1][8].split(';')[2]
    taxa = taxa.replace('taxa=\"', '')
    taxa = taxa.replace('\"', '')
    taxa = list(taxa.split())
    for isolate in taxa:
        for position in region:
            recomb_regions[isolate].append(position)


# mask indices/positions of recombinant regions identified by gubbins
#print('Masking recombinant positions in whole genome alignment.')
sample_masked_indices = defaultdict(list)
new_aln = list()

for record in aln:
    seq_str = list(str(record.seq))
    masked_indices = recomb_regions.get(record.id, [])
    for index in masked_indices:
        seq_str[index] = 'N'
    seq_str = ''.join(seq_str)
    new_record = SeqRecord(Seq(seq_str), id=record.id, description='')
    sample_masked_indices[record.id] = masked_indices
    new_aln.append(new_record)

# write new FASTA file with recombinant regions masked
fasta_outfile = os.path.join(outdir, os.path.splitext(os.path.basename(alignment))[0] + "_gubbins_masked.fa")
text_outfile = os.path.join(outdir, os.path.splitext(os.path.basename(alignment))[0] + "_masked_recomb_positions.txt")
var_site_outfile = os.path.join(outdir, os.path.splitext(os.path.basename(alignment))[0] + "_gubbins_masked_var_sites.fa")

#print('Writing', fasta_outfile)
with open(fasta_outfile, 'w') as handle:
    SeqIO.write(new_aln, handle, 'fasta')

# Write text file with list of recombinant sites for each genome
#print('Writing', text_outfile)
with open(text_outfile, 'w') as handle:
    for sample, positions in sample_masked_indices.items():
        line = str(sample) + '\t' + ','.join(map(str, positions)) + '\n'
        handle.write(line)

# Get variant sites and write to fasta file using snp-sites
#print('Getting variant sites using snp-sites.')
cmd = '/nfs/esnitkin/bin_group/anaconda3/bin/snp-sites' + fasta_outfile + \
      ' -m ' + ' -o ' + var_site_outfile

os.system(cmd)